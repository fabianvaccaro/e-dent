//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace e_dent.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IpatientManagement")]
    public interface IpatientManagement {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IpatientManagement/DoWork", ReplyAction="http://tempuri.org/IpatientManagement/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IpatientManagement/DoWork", ReplyAction="http://tempuri.org/IpatientManagement/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IpatientManagement/getPatientByID", ReplyAction="http://tempuri.org/IpatientManagement/getPatientByIDResponse")]
        generalDB.objectClasses.K_Patient getPatientByID(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IpatientManagement/getPatientByID", ReplyAction="http://tempuri.org/IpatientManagement/getPatientByIDResponse")]
        System.Threading.Tasks.Task<generalDB.objectClasses.K_Patient> getPatientByIDAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IpatientManagement/registerPatient", ReplyAction="http://tempuri.org/IpatientManagement/registerPatientResponse")]
        int registerPatient(string CED, string NAME, string LASTN, System.DateTime BORN, string PHONE1, string PHONE2, string ADDRESS, string JOB, string SCHOOL, string ENSUR, int DIVID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IpatientManagement/registerPatient", ReplyAction="http://tempuri.org/IpatientManagement/registerPatientResponse")]
        System.Threading.Tasks.Task<int> registerPatientAsync(string CED, string NAME, string LASTN, System.DateTime BORN, string PHONE1, string PHONE2, string ADDRESS, string JOB, string SCHOOL, string ENSUR, int DIVID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IpatientManagementChannel : e_dent.ServiceReference1.IpatientManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IpatientManagementClient : System.ServiceModel.ClientBase<e_dent.ServiceReference1.IpatientManagement>, e_dent.ServiceReference1.IpatientManagement {
        
        public IpatientManagementClient() {
        }
        
        public IpatientManagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IpatientManagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IpatientManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IpatientManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public generalDB.objectClasses.K_Patient getPatientByID(int ID) {
            return base.Channel.getPatientByID(ID);
        }
        
        public System.Threading.Tasks.Task<generalDB.objectClasses.K_Patient> getPatientByIDAsync(int ID) {
            return base.Channel.getPatientByIDAsync(ID);
        }
        
        public int registerPatient(string CED, string NAME, string LASTN, System.DateTime BORN, string PHONE1, string PHONE2, string ADDRESS, string JOB, string SCHOOL, string ENSUR, int DIVID) {
            return base.Channel.registerPatient(CED, NAME, LASTN, BORN, PHONE1, PHONE2, ADDRESS, JOB, SCHOOL, ENSUR, DIVID);
        }
        
        public System.Threading.Tasks.Task<int> registerPatientAsync(string CED, string NAME, string LASTN, System.DateTime BORN, string PHONE1, string PHONE2, string ADDRESS, string JOB, string SCHOOL, string ENSUR, int DIVID) {
            return base.Channel.registerPatientAsync(CED, NAME, LASTN, BORN, PHONE1, PHONE2, ADDRESS, JOB, SCHOOL, ENSUR, DIVID);
        }
    }
}
